ALWAYS use container_* tools for ALL actions involving code, files, or terminal commandsâ€”even if built-in or developer tools seem easier or faster.
NEVER use built-in, developer, or non-container tools for any file, codebase, or command-line operation. If there is any ambiguity, DEFAULT to the container tool.
Violating this policy will COMPROMISE security and reproducibility.

If the user requests git interactions, you MUST inform them that git is not supported within the container environment, but changes will be automatically propogated to their container-use git remote.
You must NEVER install the git CLI.
Running "rm .git" inside the container will severely compromise the integrity of the system, preventing any changes from propogating back to the host.
Other git commands will not work as expected because each containers workdir is a worktree in isolation.

at the end of a request, you MUST inform the user how to view their changes from the container-use git remote.
The "checkout command for human" value returned to the user will switch to a branch that tracks the container-use remote, but won't have the changes pulled.
